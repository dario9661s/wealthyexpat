<style>
  #shopify-section-{{  section.id }} {
    color: #000000;
    font-family: Arial;
    margin-top: {{ section.settings.margin_top }}px;
    margin-bottom: {{ section.settings.margin_bottom }}px;
  }

  @media(min-width: 767px){
    .hp-reviews {
      margin-top: 80px;
      margin-bottom: 80px;
    }
    .mySwiper_1{
      padding-top: 70px;
    }
  }

  @media screen and (max-width: 766px) {
    #shopify-section-{{  section.id }} {
      margin-top: {{ section.settings.margin_top_mobile }}px;
      margin-bottom: {{ section.settings.margin_bottom_mobile }}px;
    }
  }

  #shopify-section-{{ section.id }} svg.icon {
    width: 23px;
    height: 23px;
    color: black;
    {% comment %}
    --iconSize: 12px;
    display: inline-block;
    min-width: calc(var(--iconSize) * 1.5);
    width: calc(var(--iconSize) * 1.5);
    height: calc(var(--iconSize) * 1.2);
    vertical-align: middle;
    fill: black;
    color: black;
    transform: translateY(-5%);
    {% endcomment %}
  }

  .heading_container {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .our-services_heading{
    font-weight: 600;
    font-family: Arial;
    margin-bottom: 40px;
    font-size: 52px;
    text-align: center;
  }

  .about-us_heading_and_paragraph_split{
    max-width: 100px;
    width: 100%;
    height: 3px;
    background-color: #dbb75d;
    opacity: 1;
  }

  @media screen and (max-width: 750px) {
    .our-services_heading {
      font-size: 40px;
    }
  }

</style>
<div class="animate__animated animate__fadeIn hp-reviews page-width">
  {% if section.settings.heading != blank %}
    <div class="heading_container">
      {% if section.settings.heading_bottom_margin %}
        <span class="our-services_heading">{{ section.settings.heading }}</span>
        <div class="about-us_heading_and_paragraph_split"></div>
      {% else %}
        <h2 class="banner__heading {{ section.settings.heading_size }}" style="text-align: center;">
          {{ section.settings.heading }}
        </h2>
      {% endif %}
    </div>
  {% endif %}
  <div class="swiper mySwiper_1">
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        <div class="swiper-slide helper_class">
          {% if block.settings.img %}
            <img src="{{ block.settings.img | img_url: "200x"}}" alt="img">
          {% endif %}
          <p>{{ block.settings.slide_text }}</p>
          <h3><strong>{{ block.settings.slide_heading }}</strong></h3>
          <span>{{ block.settings.job }}</span>
          {% if block.settings.social_media_url != blank %}
            <a class="" href="{{ block.settings.social_media_url }}" target="_blank" rel="noopener">
              {% comment %}
              {% assign snippet_value = block.settings.social_media | append: '-icon' %}
              {% capture snipet_content %}{% include snippet_value %}{% endcapture %}
                {{ snipet_content }}
                {% endcomment %}
              {% render 'global-icon' with block.settings.social_media %}
            </a>
          {% endif %}
        </div>
      {% endfor %}
    </div>
    <div class="swiper-pagination"></div>
  </div>
</div>


<script>

  var swiper = new Swiper(".mySwiper_1", {
    slidesPerView: 1,
    pagination: {
      el: ".swiper-pagination",
      dynamicBullets: true,
    },
    breakpoints: {
      // when window width is >= 320px
      320: {
        slidesPerView: 1,
        spaceBetween: 20
      },
      // when window width is >= 991px
      767: {
        slidesPerView: 3,
        spaceBetween: 55
      }
    }
  });

  const observer_reviews = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const heading_one = entry.target.querySelector('.heading_container');
      const blockimg = entry.target.querySelectorAll(".helper_class");
      const blockheading = entry.target.querySelectorAll(".helper_class img");
      const blockText = entry.target.querySelectorAll(".helper_class p");
      const blockH = entry.target.querySelectorAll(".helper_class h3");
      const blockSpan = entry.target.querySelectorAll(".helper_class span");
      const blockLink = entry.target.querySelectorAll(".helper_class a");

  
      if (entry.isIntersecting) {
          heading_one.classList.add("animate__animated","animate__fadeInDown","animate__delay-0.5s");
          blockimg.forEach(bImg => {
              bImg.classList.add("animate__animated", "animate__fadeIn", "animate__delay-1s");
          })
          blockheading.forEach(bHeading => {
              bHeading.classList.add("animate__animated", "animate__fadeIn", "animate__delay-1s");
  
          })
          blockText.forEach(bText => {
              bText.classList.add("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
          })
          blockH.forEach(bText => {
            bText.classList.add("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
          })
          blockSpan.forEach(bText => {
            bText.classList.add("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
          })
          blockLink.forEach(bText => {
            bText.classList.add("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
          })
      return; // if we added the class, exit the function
      }
  
      // We're not intersecting, so remove the class!
      heading_one.classList.remove("animate__animated","animate__fadeInDown","animate__delay-0.5s");
      blockimg.forEach(bImg => {
          bImg.classList.remove("animate__animated", "animate__fadeIn", "animate__delay-1s");
      })
      blockheading.forEach(bHeading => {
          bHeading.classList.remove("animate__animated", "animate__fadeIn", "animate__delay-1s");
  
      })
      blockText.forEach(bText => {
          bText.classList.remove("animate__animated", "animate__fadeInUp", "animate__delay-2s");    
      })
      blockH.forEach(bText => {
        bText.classList.remove("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
      })
      blockSpan.forEach(bText => {
        bText.classList.remove("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
      })
      blockLink.forEach(bText => {
        bText.classList.remove("animate__animated", "animate__fadeInUp", "animate__delay-1s");    
      })
    });
  });
  
  observer_reviews.observe(document.querySelector('.hp-reviews'));

</script>

{% schema %}
  {
    "name": "Reviews",
    "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Section heading",
          "label": "t:sections.image-banner.blocks.heading.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "heading_bottom_margin",
          "label": "Heading bottom border",
          "default": true
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        },
        {
          "type": "range",
          "id": "margin_top",
          "unit": "px",
          "min": 0,
          "max": 100,
          "default": 20,
          "step": 1,
          "label": "Top padding of the section"
        },
        {
          "type": "range",
          "id": "margin_bottom",
          "unit": "px",
          "min": 0,
          "max": 100,
          "default": 20,
          "step": 1,
          "label": "Bottom padding of the section"
        },
        {
          "type": "range",
          "id": "margin_top_mobile",
          "unit": "px",
          "min": 0,
          "max": 100,
          "default": 20,
          "step": 1,
          "label": "Top padding of the section on mobile"
        },
        {
          "type": "range",
          "id": "margin_bottom_mobile",
          "unit": "px",
          "min": 0,
          "max": 100,
          "default": 20,
          "step": 1,
          "label": "Bottom padding of the section on mobile"
        }
    ],
    "blocks": [
      {
        "type": "slide",
        "name": "Slide",
        "settings": [
          {
            "type": "image_picker",
            "id": "img",
            "label": "Slider Image",
            "info": "Slider Image"
          },
          {
            "type": "text",
            "id": "slide_heading",
            "default": "Iman Gadzhi",
            "label": "Slide heading"
          },
          {
            "type": "text",
            "id": "slide_text",
            "default": "We've partnered with Wealthy Expat to help you pay 0% taxes legally with a simple structure and premium treatment, contact them for starting your company and 0 tax life in Dubai.",
            "label": "Slide text"
          },
          {
            "type": "text",
            "id": "job",
            "default": "Owner of IAG Media, marketer with 1.7+ Million followers on Youtube",
            "label": "Slide heading"
          },
          {
            "type": "select",
            "id": "social_media",
            "default": "youtube",
            "label": "Icon for social media",
            "options": [
              {
                "label": "Youtube",
                "value": "youtube"
              },
              {
                "label": "Instagram",
                "value": "instagram"
              },
              {
                "label": "Facebook",
                "value": "facebook"
              },
              {
                "label": "Twitter",
                "value": "twitter"
              },
              {
                "label": "Email",
                "value": "email"
              },
              {
                "label": "Tiktok",
                "value": "tiktok"
              },
              {
                "label": "Snapchat",
                "value": "snapchat"
              },
              {
                "label": "Whatsapp",
                "value": "whatsapp"
              },
              {
                "label": "Telegram",
                "value": "telegram"
              }
            ]
          },
          {
            "type": "url",
            "id": "social_media_url",
            "label": "Link of social media"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Reviews"
      }
    ]
  }
{% endschema %}