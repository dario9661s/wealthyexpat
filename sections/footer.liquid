{% comment %}theme-check-disable UndefinedObject{% endcomment %}
{{ 'section-footer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  #shopify-section-{{ section.id }} {
    background: {{ section.settings.footer_background }};
  }
  .footer {
    margin-top: {{ section.settings.margin_top | times: 0.75 | round: 0 }}px;
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .footer {
      margin-top: {{ section.settings.margin_top }}px;
    }

    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>
  .footer {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    padding-bottom: 30px;
  }
  .footer .list-menu {
    display: flex;
    flex-direction: column;
    padding-bottom: 30px;
  }
  .footer-buttons {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: center;
  }
  .footer-buttons a {
    text-decoration: none;
    color: {{ section.settings.button_text_color }};
    margin: 10px;
    width: 200px;
    font-size: 16px;
    padding: 10px;
    text-align: center;
    font-family: 'Arial',Arial,sans-serif;
    line-height: 1.55;
    font-weight: 600;
    border-width: 1px;
    border-radius: 0px;
    background-color: {{ section.settings.button_background_color }};
    background-position: center center;
    border-color: transparent;
    border-style: solid;
  }
  .footer-map-container {
    background: #000000;
    height: 300px;
    width: 100%;
  }
  .social_media_icons--foter a {
      text-decoration: none;
  }
  .contact-details {
      text-align: {{ section.settings.richtext_align }};
  }
  @media screen and (min-width: 1000px) {
    .footer_grid {
      display: grid;
      grid-template-columns: minmax(150px, 200px) minmax(auto, 100%) minmax(217px, 217px);
      padding-left: 10px;
      padding-right: 10px;
      column-gap: 10px;
      width: 100%;
    }
    .footer-map {
      display: flex;
      gap: 10px;
      border-radius: 20px;
      background: white;
      padding: 26px;
    }
    .footer-content {
      display: flex;
      align-items: center;
    }
  }

  footer .list-menu.list-menu--inline span {
    color: {{ section.settings.footer_text_color }};
  }

  @media(max-width: 1000px) {
    .footer {
      grid-template-columns: 1fr;
      text-align: center;
    }
    .footer .header__menu-item {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .footer-buttons {
      align-items: center;
    }
    .contact-details {
      text-align: {{ section.settings.richtext_align_mobile }};
    }
    .footer-content {
        order: 3;
    }
    .contact-details {
      color: {{ section.settings.footer_text_color }};
    }
    footer {
      color: {{ section.settings.footer_text_color }};
    }
    footer .contact-details {
      color: {{ section.settings.footer_text_color }};
    }
    .contact-details h3 {
      color: {{ section.settings.footer_text_color }};
    }
    .footer-map-container {
      margin: 5rem 0;
    }
    .footer-content {
      margin-top: 2rem;
    }
  }
</style>

<footer class="page-width footer section-{{ section.id }}-padding footer_grid">
  <div class="footer-content">

    <ul class="list-menu list-menu--inline" role="list">
      {%- for link in section.settings.menu.links -%}
        <li>
          {%- if link.links != blank -%}
            <header-menu>
              <details id="Details-HeaderMenu-{{ forloop.index }}">
                <summary class="header__menu-item list-menu__item link focus-inset">
                  <span {%- if link.child_active %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
                  {% render 'icon-caret' %}
                </summary>
                <ul id="HeaderMenu-MenuList-{{ forloop.index }}" class="header__submenu list-menu list-menu--disclosure gradient caption-large motion-reduce global-settings-popup" role="list" tabindex="-1">
                  {%- for childlink in link.links -%}
                    <li>
                      {%- if childlink.links == blank -%}
                        <a href="{{ childlink.url }}" class="header__menu-item list-menu__item link link--text focus-inset caption-large{% if childlink.current %} list-menu__item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                          {{ childlink.title | escape }}
                        </a>
                      {%- else -%}
                        <details id="Details-HeaderSubMenu-{{ forloop.index }}">
                          <summary class="header__menu-item link link--text list-menu__item focus-inset caption-large">
                            <span>{{ childlink.title | escape }}</span>
                            {% render 'icon-caret' %}
                          </summary>
                          <ul id="HeaderMenu-SubMenuList-{{ forloop.index }}" class="header__submenu list-menu motion-reduce">
                            {%- for grandchildlink in childlink.links -%}
                              <li>
                                <a href="{{ grandchildlink.url }}" class="header__menu-item list-menu__item link link--text focus-inset caption-large{% if grandchildlink.current %} list-menu__item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %}>
                                  {{ grandchildlink.title | escape }}
                                </a>
                              </li>
                            {%- endfor -%}
                          </ul>
                        </details>
                      {%- endif -%}
                    </li>
                  {%- endfor -%}
                </ul>
              </details>
            </header-menu>
          {%- else -%}
            <a href="{{ link.url }}" class="header__menu-item list-menu__item link link--text focus-inset"{% if link.current %} aria-current="page"{% endif %}>
              <span {%- if link.current %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
            </a>
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
  </div>
  <div class="footer-map">
    <div class="contact-details">
        {{ section.settings.footer_richtext }}
        <div class="social_media_icons--foter">
            {% for block in section.blocks %}
              {% case block.type %}
                {% when 'social_media_icons' %}
                  {% assign social_media = block.settings.media_icon %}
                  {% if block.settings.social_media_link != blank %}
                      <a href="{{ block.settings.social_media_link }}" target="_blank" rel="noopener nofollow">
                          {% render 'global-icon' with social_media %}
                      </a>
                  {% else %}
                      {% render 'global-icon' with social_media %}
                  {% endif %}
              {% endcase %}
            {% endfor %}
        </div>
    </div>

    <div class="footer-map-container">

    </div>
  </div>
  <div class="footer-buttons">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'cta_button' %}
          {% if block.settings.button_url != blank %}
            <a href="{{ block.settings.button_url }}">{{ block.settings.button_text }}</a>
          {% else %}
            <a href="/">{{ block.settings.button_text }}</a>
          {% endif %}
      {% endcase %}
    {% endfor %}
  </div>


</footer>

{% javascript %}
  class LocalizationForm extends HTMLElement {
    constructor() {
      super();
      this.elements = {
        input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
        button: this.querySelector('button'),
        panel: this.querySelector('.disclosure__list-wrapper'),
      };
      this.elements.button.addEventListener('click', this.openSelector.bind(this));
      this.elements.button.addEventListener('focusout', this.closeSelector.bind(this));
      this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

      this.querySelectorAll('a').forEach(item => item.addEventListener('click', this.onItemClick.bind(this)));
    }

    hidePanel() {
      this.elements.button.setAttribute('aria-expanded', 'false');
      this.elements.panel.setAttribute('hidden', true);
    }

    onContainerKeyUp(event) {
      if (event.code.toUpperCase() !== 'ESCAPE') return;

      this.hidePanel();
      this.elements.button.focus();
    }

    onItemClick(event) {
      event.preventDefault();
      const form = this.querySelector('form');
      this.elements.input.value = event.currentTarget.dataset.value;
      if (form) form.submit();
    }

    openSelector() {
      this.elements.button.focus();
      this.elements.panel.toggleAttribute('hidden');
      this.elements.button.setAttribute('aria-expanded', (this.elements.button.getAttribute('aria-expanded') === 'false').toString());
    }

    closeSelector(event) {
      const shouldClose = event.relatedTarget && event.relatedTarget.nodeName === 'BUTTON';
      if (event.relatedTarget === null || shouldClose) {
        this.hidePanel();
      }
    }
  }

  customElements.define('localization-form', LocalizationForm);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.footer.name",
  "settings": [
    {
      "type": "color",
      "id": "footer_background",
      "default": "#656565",
      "label": "Footer background"
    },
    {
      "type": "color",
      "id": "footer_text_color",
      "default": "#FFFFFF",
      "label": "Footer background"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background color",
      "default": "#dbb75d"
    },
    {
      "type": "richtext",
      "id": "footer_richtext",
      "label": "Text for footer"
    },
    {
      "type": "select",
      "id": "richtext_align",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        }
      ],
      "default": "left",
      "label": "Text alignment"
    },
    {
      "type": "select",
      "id": "richtext_align_mobile",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        }
      ],
      "default": "left",
      "label": "Text alignment on mobile"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.footer.settings.margin_top.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "social_media_icons",
      "name": "Social media icons",
      "settings": [
        {
          "type": "select",
          "options": [
            {
              "label": "Twitter",
              "value": "golden-twitter"
            },
            {
              "label": "Instagram",
              "value": "golden-instagram"
            },
            {
              "label": "Youtube",
              "value": "golden-youtube"
            },
            {
              "label": "Whatsapp",
              "value": "golden-whatsapp"
            }
          ],
          "label": "Select social media icon",
          "id": "media_icon"
        },
        {
          "type": "url",
          "id": "social_media_link",
          "label": "Url for the social media icon"
        }
      ]
    },
    {
      "type": "cta_button",
      "name": "Button",
      "settings": [
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text",
          "default": "Become a Client"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Button link"
        }
      ]
    }
  ]
}
{% endschema %}
